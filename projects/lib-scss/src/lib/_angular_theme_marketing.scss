//@use 'sass:map';
@use "@angular/material" as mat;
//@use '@angular/material/theming' as theming;

$my-typography: mat.define-typography-config(
  $font-family: Montserrat,
);

@include mat.core($my-typography);

$my-primary: mat.define-palette(mat.$red-palette, 600, 200, 800);
$my-accent: mat.define-palette(mat.$orange-palette, A200, A100, A400);
$my-warn: mat.define-palette(mat.$brown-palette, A200, A100, A400);

$my-theme: mat.define-light-theme(
  (
    color: (
      primary: $my-primary,
      accent: $my-accent,
      warn: $my-warn,
    ),
  )
);

// Emit theme-dependent styles for common features used across multiple components.
@include mat.core-theme($my-theme);

// Emit styles for MatButton based on `$my-theme`. Because the configuration
// passed to `define-light-theme` omits typography, `button-theme` will not
// emit any typography styles.
@include mat.tabs-theme($my-theme);
@include mat.button-theme($my-theme);
@include mat.stepper-theme($my-theme);
@include mat.select-theme($my-theme);
@include mat.icon-theme($my-theme);
@include mat.all-component-themes($my-theme);

//@include mat.ripple-theme($my-theme);
//@include mat.icon-theme($my-theme);
//@include mat.divider-theme($my-theme);

//$color-config:    mat.get-color-config($theme);
//$primary-palette: map.get($color-config, 'primary');
//$typography-config: mat.get-typography-config($theme);
//$my-font-family: mat.font-family($typography-config);

//$color-config:    mat.get-color-config($my-theme);
//$primary-palette: map.get($color-config, 'primary');
//$accent-palette:  map.get($color-config, 'accent');
//$warn-palette:    map.get($color-config, 'warn');
//$is-dark-theme:   map.get($color-config, 'is-dark');
//
//$color1: get-color-from-palette($primary-palette, text);
.floor01-3 {
  .mat-form-field-appearance-outline .mat-form-field-flex {
    padding: 0 0.75em 0 0.75em;
    margin-top: 0.25em;
    position: relative;
    font-size: 0.9rem;
  }
  .mat-form-field-wrapper {
    padding-bottom: 0;
  }
}

.mat-bottom-sheet-container.coupon2 {
  padding: 0;
  overflow-x: hidden;
  max-height: 90vh;
  border-radius: 7px 7px 0 0;
}

.c1 {
  .mat-form-field-appearance-fill .mat-form-field-flex {
    border-radius: 4px 4px 0 0;
    padding: 0.2em 0.2em 0 0.2em;
    width: 50vw;
  }
  .mat-form-field {
    font-size: 0.6rem;
    line-height: 0.8rem;
  }

  .mat-form-field-infix {
    width: 8rem;
  }
}

.floor01-2-1 {
  .mat-list-item-content div {
    width: 100%;
  }

  .mat-list-base .mat-list-item .mat-list-item-content,
  .mat-list-base .mat-list-option .mat-list-item-content {
    padding: 0;
    font-size: 0.9rem;
  }
}

@media (max-width: 360px) {
  .c1 {
    .mat-form-field-appearance-fill .mat-form-field-flex {
      border-radius: 4px 4px 0 0;
      padding: 0.2em 0.2em 0 0.2em;
      width: 50vw;
    }
    .mat-form-field {
      font-size: 0.6rem;
      line-height: 0.8rem;
    }

    .mat-form-field-infix {
      width: 8rem;
    }
  }
}
